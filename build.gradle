plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.diffplug.spotless' version '6.23.3' // Spotless 플러그인
}

allprojects {
    group = 'com.chooz'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

subprojects { // 각 모듈에 적용할 공통 설정
    apply plugin: 'java'

    // build.gradle에서 api() 를 사용하려면 java-library 사용
    apply plugin: 'java-library'

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies { // 롬복은 공통적으로 사용하는 의존성이니 여기서 끌어다 사용
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    tasks.named('bootJar') { //빌드할 때 bootjar 파일로 하겠다는 의미
        enabled = false
    }

    tasks.named('jar') { //빌드할 때 jar 파일로 하겠다는 의미
        enabled = true
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

def querydslSrcDir = 'src/main/generated'

clean {
    delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}


/*
    compileJava 태스크가 실행되기 전에 spotlessApply 태스크가 먼저 실행되도록 구성
    개발자가 별도로 코드 포맷팅을 신경 쓸 필요 없이, 코드가 항상 일관된 스타일을 유지하도록 설정
 */
tasks.named('compileJava') {
    dependsOn 'spotlessApply'
}

jar {
    enabled = false
}

spotless {
    java {
        // Google Java 포맷 적용
        /*
            googleJavaFormat() : 탭은 2개의 공백
            googleJavaFormat().aosp() : 탭은 4개의 공백
            [참고] https://github.com/google/google-java-format/issues/525
         */
        googleJavaFormat().aosp()
        // 아래 순서로 import문 정렬
        importOrder('java', 'javax', 'jakarta', 'org', 'com')
        // 사용하지 않는 import 제거
        removeUnusedImports()
        // 각 라인 끝에 있는 공백을 제거
        trimTrailingWhitespace()
        // 파일 끝에 새로운 라인 추가
        endWithNewline()
    }
}