# default profile
spring:
  application:
    name: briefing-dev
  profiles:
    active: dev
  batch:
    jdbc:
      initialize-schema: always
springdoc:
  swagger-ui:
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
  cache:
    disabled: true
  use-fqn: true
swagger:
  login:
    id: ${SWAGGER_ID}
    password : ${SWAGGER_PASS}
fcm:
  key: ${FCM_KEY}
  permit-flag : 1
  topic:
    daily-push : dailyPush
---
logging:
  level:
    org.springframework.security.web.FilterChainProxy: DEBUG
spring:
  config:
    activate:
      on-profile: local
  datasource:
    username: ${aws.db.username}
    password: ${aws.db.password}
    url: ${aws.db.url}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000

  data:
    redis:
      host: localhost
      port: 6379
eureka:
  client:
    service-url:
      defaultZone: http://gateway.newsbreifing.store:8761/eureka
  instance:
    # 표기되는 규칙 변경
    instance-id: dev_briefing_server
    hostname: dev.newsbreifing.store
    ip-address: dev.newsbreifing.store

jwt:
  header: Authorization
  # dev server
  secret: ${JWT_SECRET}
  authorities-key: authoritiesKey
  #1800000
  access-token-validity-in-seconds:  3000
  refresh-token-validity-in-seconds:  1209600000 # 14 d

openai:
  token: ${OPEN_API_TOKEN}
  url:
    chat: https://api.openai.com/v1/chat/completions

---
spring:
  application:
    name: dev
  config:
    activate:
      on-profile: dev
  datasource:
    username: ${aws.db.username}
    password: ${aws.db.password}
    url: ${aws.db.url}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        #        show_sql: true
        #        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
  data:
    redis:
      host: ${REDIS_URL}
      port: 6379
eureka:
  instance:
    # 표기되는 규칙 변경
    instance-id: dev_briefing_server
    hostname: dev.newsbreifing.store
    ip-address: dev.newsbreifing.store
  client:
    service-url:
      defaultZone: http://gateway.newsbreifing.store:8761/eureka

jwt:
  header: Authorization
  # dev server
  secret: ${JWT_SECRET}
  #  secret : ${JWT_SECRET}
  authorities-key: authoritiesKey
  access-token-validity-in-seconds: 30000 # 30 m
  refresh-token-validity-in-seconds: 1210000000 # 14 d

openai:
  token: ${OPEN_API_TOKEN}
  url:
    chat: https://api.openai.com/v1/chat/completions
---
spring:
  config:
    activate:
      on-profile: release
  datasource:
    username: ${aws.db.username}
    password: ${aws.db.password}
    url: ${aws.db.url}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        #        show_sql: true
        #        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
  data:
    redis:
      host: ${release.redis.host}
      port: 6379
jwt:
  header: Authorization
  # dev server
  secret: ${JWT_SECRET}
  #  secret : ${JWT_SECRET}
  authorities-key: authoritiesKey
  access-token-validity-in-seconds: 1800 # 30 m
  refresh-token-validity-in-seconds: 1210000000 # 14 d

openai:
  token: ${OPEN_API_TOKEN}
  url:
    chat: https://api.openai.com/v1/chat/completions
